{% raw -%}
sources:
  journald_logs_raw:
    type: journald
    current_boot_only: false

  docker_logs_raw:
    type: docker_logs

transforms:
  journald_logs:
    type: remap
    inputs: [journald_logs_raw]
    source: |
      level = "unknown"
      if .PRIORITY == "0" || .PRIORITY == "1" || .PRIORITY == "2" {
        level = "critical"
      } else if .PRIORITY == "3" {
        level = "error"
      } else if .PRIORITY == "4" {
        level = "warning"
      } else if .PRIORITY == "5" || .PRIORITY == "6" {
        level = "info"
      } else if .PRIORITY == "7" {
        level = "debug"
      }
      . = {
        "host": .host,
        "source": .source_type,
        "level": level,
        "service": ._SYSTEMD_UNIT || .SYSLOG_IDENTIFIER,
        "message": .message
      }

  docker_logs_filtered:
    type: filter
    inputs: [docker_logs_raw]
    condition: >
      .stream != "console" &&
      starts_with!(.label."com.docker.compose.project.working_dir", replace(get_env_var!("SERVICES_ROOT"), r'/$', "") + "/")

  docker_logs:
    type: remap
    inputs: [docker_logs_filtered]
    source: |
      . = {
        "host": .host,
        "source": .source_type,
        "level": "unknown",
        "service": .label."com.docker.compose.service",
        "message": .message
      }

sinks:
  loki:
    type: loki
    inputs: ['*_logs']
    encoding:
      codec: text
    labels:
      host: '{{ host }}'
      source: '{{ source }}'
      service: '{{ service }}'
      level: '{{ level }}'
    remove_label_fields: true
    healthcheck:
      enabled: false
    endpoint: '$LOKI_ENDPOINT'
    auth:
      strategy: basic
      user: '$LOKI_USERNAME'
      password: '$LOKI_PASSWORD'
{% endraw %}
