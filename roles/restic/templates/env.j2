#jinja2:line_statement_prefix: '#'
# macro options(options_dict)
#   set result = []
#   for option, value in options_dict.items()
#     set option = option.replace('_', '-')
#     set values = value if value is sequence and value is not string else [value]
#     for value in values
#       if value is boolean and value
#         set result = result.append('--' + option)
#       else
#         set result = result.append('--' + option + '=' + value)
#       endif
#     endfor
#   endfor
{{- result | map('quote') | join(' ') -}}
# endmacro

RESTIC_CACHE_DIR=/var/cache/restic
RESTIC_REPOSITORY={{ restic_repository | quote }}
RESTIC_PASSWORD={{ restic_password | quote }}
RESTIC_FILES={{ restic_files | map('quote') | join(' ') | quote }}
RESTIC_BACKUP_OPTIONS={{ options(restic_backup_options) | quote }}
RESTIC_FORGET_OPTIONS={{ options(restic_forget_options) | quote }}

RCLONE_CONFIG=/dev/null
{% for key, value in restic_env.items() %}
{{ key }}={{ value | quote }}
{% endfor %}
